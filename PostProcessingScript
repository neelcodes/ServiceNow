/*
*  1. Pre sensor:  You can change payload before it will be proccesed by Identification Engine.
*	  Use IEJsonUtility in order to add relevant information to the payload
*     Input parameters in Pre sensor mode: payload, patternId
*  2. Post sensor: You can update/add missing info to the DB based on result (Json) from
*     Identification Engine
*     Output parameters in Post sensor mode: payload
*
*/
var rtrn = {};

//parsing the json string to a json object
var payloadObj = JSON.parse(payload);
var payloadItems = payloadObj.items;
// Create relationship between VM instance and Avi appliance upon matching on the name
if (payloadObj.hasOwnProperty('items')) {
	
	for(var i=0; i < payloadItems.length; i++) {
		if (payloadItems[i].className === 'cmdb_ci_avi_controller') {
			gs.log(payloadObj.items[0].values.name, "SN_Neel");

    var nameofAvi = payloadObj.items[i].values.name;
    var vmi = new GlideRecord("cmdb_ci_vm_instance");
	vmi.addEncodedQuery("name="+nameofAvi);
    vmi.query();
	
    if (vmi.next()) {
 
		gs.log(nameofAvi, "SN_Neel_aviname1");
        var aviController = new GlideRecord("cmdb_ci_avi_controller");
        aviController.addEncodedQuery("name=" + nameofAvi);
        aviController.query();
        if (aviController.next()) {
            gs.log("Test3", "SN_Neel");

            var vmiRel = new GlideRecord("cmdb_rel_ci");
            vmiRel.addEncodedQuery("parent=" + aviController.sys_id + "^child=" + vmi.sys_id + "^type=1bb40e370a0a0b323d85a1ce84f8feae");
            vmiRel.query();
            if (!vmiRel.hasNext()) {
                gs.log("Test4", "SN_Neel");

                vmiRel.initialize();
                vmiRel.parent = aviController.sys_id;
                vmiRel.child = vmi.sys_id;
                vmiRel.type = "1bb40e370a0a0b323d85a1ce84f8feae";
                vmiRel.insert();
                gs.log(aviController.sys_id + " | " + vmi.sys_id, "SN_Neel");
				
				
            }
			var orgidtoApliance = new GlideRecord("cmdb_key_value");
			orgidtoApliance.addEncodedQuery("configuration_item="+vmi.sys_id+"^key=OrgID");
			orgidtoApliance.query();
			if (orgidtoApliance.next()){
				
				var orgGr = new GlideRecord("u_organisation");
				orgGr.addEncodedQuery("u_organisationid="+orgidtoApliance.value);
				orgGr.query();
				if(orgGr.next()){
					aviController.u_organization_id = orgGr.sys_id;
					aviController.update();
				}
				
			}
        }
    }
}
}
}
//you can return a message and a status, on top of the input variables that you MUST return.
//returning the payload as a Json String is mandatory in case of a pre sensor script, and optional in case of post sensor script.
//if you want to terminate the payload processing due to your business logic - you can set isSucess to false.
rtrn = {'status':{
				'message':'Enter your message here'+ JSON.stringify(payloadObj),
				'isSuccess':true
				},
		'patternId':patternId,
		'payload':JSON.stringify(payloadObj)
};
